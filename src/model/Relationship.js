/*
 * Domain Graph API
 * This is a simple API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: pat.cataldo@autodesk.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';
import {Property} from './Property';

/**
 * The Relationship model module.
 * @module model/Relationship
 * @version 1.0.0
 */
export class Relationship {
  /**
   * Constructs a new <code>Relationship</code>.
   * @alias module:model/Relationship
   * @class
   * @param type {String} 
   * @param node1 {String} 
   * @param node2 {String} 
   */
  constructor(type, node1, node2) {
    this.type = type;
    this.node1 = node1;
    this.node2 = node2;
  }

  /**
   * Constructs a <code>Relationship</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Relationship} obj Optional instance to populate.
   * @return {module:model/Relationship} The populated <code>Relationship</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Relationship();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('properties'))
        obj.properties = ApiClient.convertToType(data['properties'], [Property]);
      if (data.hasOwnProperty('node1'))
        obj.node1 = ApiClient.convertToType(data['node1'], 'String');
      if (data.hasOwnProperty('node2'))
        obj.node2 = ApiClient.convertToType(data['node2'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} id
 */
Relationship.prototype.id = undefined;

/**
 * @member {String} type
 */
Relationship.prototype.type = undefined;

/**
 * @member {Array.<module:model/Property>} properties
 */
Relationship.prototype.properties = undefined;

/**
 * @member {String} node1
 */
Relationship.prototype.node1 = undefined;

/**
 * @member {String} node2
 */
Relationship.prototype.node2 = undefined;


